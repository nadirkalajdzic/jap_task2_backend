// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jap_task2_backend.Data;

namespace jap_task2_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210901184850_InitialMigrate")]
    partial class InitialMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorVideo", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("int");

                    b.Property<int>("VideosId")
                        .HasColumnType("int");

                    b.HasKey("ActorsId", "VideosId");

                    b.HasIndex("VideosId");

                    b.ToTable("ActorVideo");
                });

            modelBuilder.Entity("CategoryVideo", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("VideosId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "VideosId");

                    b.HasIndex("VideosId");

                    b.ToTable("CategoryVideo");
                });

            modelBuilder.Entity("jap_task1_backend.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Morgan",
                            Surname = "Freeman"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob",
                            Surname = "Gunton"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tim",
                            Surname = "Robbins"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Marlon",
                            Surname = "Brando"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Al",
                            Surname = "Pacino"
                        },
                        new
                        {
                            Id = 6,
                            Name = "James",
                            Surname = "Caan"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Robert",
                            Surname = "De Niro"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Robert",
                            Surname = "Duvall"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Christian",
                            Surname = "Bale"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Heath",
                            Surname = "Ledger"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Aaron",
                            Surname = "Eckhart"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Henry",
                            Surname = "Fonda"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Lee",
                            Surname = "J. Cobb"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Martin",
                            Surname = "Balsam"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Liam",
                            Surname = "Neeson"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Ralph",
                            Surname = "Fiennes"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Ben",
                            Surname = "Kingsley"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Elijah",
                            Surname = "Wood"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Viggo",
                            Surname = "Mortensen"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Ian",
                            Surname = "McKellen"
                        },
                        new
                        {
                            Id = 21,
                            Name = "John",
                            Surname = "Travolta"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Uma",
                            Surname = "Thurman"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Samuel",
                            Surname = "L. Jackson"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Clint",
                            Surname = "Eastwood"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Eli",
                            Surname = "Wallach"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Lee",
                            Surname = "Van Cleef"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Orlando",
                            Surname = "Bloom"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Brad",
                            Surname = "Pitt"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Edward",
                            Surname = "Norton"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Meat",
                            Surname = "Loaf"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Tom",
                            Surname = "Hanks"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Robin",
                            Surname = "Wright"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Gary",
                            Surname = "Sinise"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Leonardo",
                            Surname = "DiCaprio"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Joseph",
                            Surname = "Gordon-Levitt"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Elliot",
                            Surname = "Page"
                        },
                        new
                        {
                            Id = 37,
                            Name = "David",
                            Surname = "Attenborough"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Sigourney",
                            Surname = "Weaver"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Nikolay",
                            Surname = "Drozdov"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Bryan",
                            Surname = "Cranston"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Aaron",
                            Surname = "Paul"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Anna",
                            Surname = "Gunn"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Scott",
                            Surname = "Grimes"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Damian",
                            Surname = "Lewis"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Ron",
                            Surname = "Livingston"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Jessie",
                            Surname = "Buckley"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Jared",
                            Surname = "Harris"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Stellan",
                            Surname = "Skarsgard"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Jessie",
                            Surname = "Buckley"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Dominic",
                            Surname = "West"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Lance",
                            Surname = "Reddick"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Sonja",
                            Surname = "Sohn"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Peter",
                            Surname = "Drost"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Roger",
                            Surname = "Horrocks"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Neil",
                            Surname = "deGrasse Tyson"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Stoney",
                            Surname = "Emshwiller"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Piotr",
                            Surname = "Michael"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Neil",
                            Surname = "deGrasse Tyson"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Dee",
                            Surname = "Bradley Baker"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Zach",
                            Surname = "Tyler"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Mae",
                            Surname = "Whitman"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Carl",
                            Surname = "Sagan"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Jaromir",
                            Surname = "Hanzlik"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Jonathan",
                            Surname = "Fahn"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Emilia",
                            Surname = "Clarke"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Peter",
                            Surname = "Dinklage"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Kit",
                            Surname = "Harington"
                        },
                        new
                        {
                            Id = 68,
                            Name = "James",
                            Surname = "Gandolfini"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Lorraine",
                            Surname = "Bracco"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Eddie",
                            Surname = "Falco"
                        });
                });

            modelBuilder.Entity("jap_task1_backend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ACTION"
                        },
                        new
                        {
                            Id = 2,
                            Name = "COMEDY"
                        },
                        new
                        {
                            Id = 3,
                            Name = "THRILLER"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DRAMA"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TRAGEDY"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CRIME"
                        },
                        new
                        {
                            Id = 7,
                            Name = "BIOGRAPHY"
                        },
                        new
                        {
                            Id = 8,
                            Name = "ADVENTURE"
                        },
                        new
                        {
                            Id = 9,
                            Name = "WESTERN"
                        },
                        new
                        {
                            Id = 10,
                            Name = "BIOGRAPHY"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ROMANCE"
                        },
                        new
                        {
                            Id = 12,
                            Name = "SCI-FI"
                        },
                        new
                        {
                            Id = 13,
                            Name = "DOCUMENTARY"
                        },
                        new
                        {
                            Id = 14,
                            Name = "HISTORY"
                        },
                        new
                        {
                            Id = 15,
                            Name = "ANIMATION"
                        });
                });

            modelBuilder.Entity("jap_task1_backend.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            Value = 4.6f,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 1,
                            Value = 4.5f,
                            VideoId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 1,
                            Value = 4.5f,
                            VideoId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 1,
                            Value = 4.5f,
                            VideoId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 1,
                            Value = 4.4f,
                            VideoId = 5
                        },
                        new
                        {
                            Id = 6,
                            UserId = 1,
                            Value = 4.35f,
                            VideoId = 6
                        },
                        new
                        {
                            Id = 7,
                            UserId = 1,
                            Value = 4.3f,
                            VideoId = 7
                        },
                        new
                        {
                            Id = 8,
                            UserId = 1,
                            Value = 4.2f,
                            VideoId = 8
                        },
                        new
                        {
                            Id = 9,
                            UserId = 1,
                            Value = 4.2f,
                            VideoId = 9
                        },
                        new
                        {
                            Id = 10,
                            UserId = 1,
                            Value = 4.2f,
                            VideoId = 10
                        },
                        new
                        {
                            Id = 11,
                            UserId = 1,
                            Value = 4.2f,
                            VideoId = 11
                        },
                        new
                        {
                            Id = 12,
                            UserId = 1,
                            Value = 4.1f,
                            VideoId = 12
                        },
                        new
                        {
                            Id = 13,
                            UserId = 1,
                            Value = 4.1f,
                            VideoId = 13
                        },
                        new
                        {
                            Id = 14,
                            UserId = 1,
                            Value = 4.7f,
                            VideoId = 14
                        },
                        new
                        {
                            Id = 15,
                            UserId = 1,
                            Value = 4.6f,
                            VideoId = 15
                        },
                        new
                        {
                            Id = 16,
                            UserId = 1,
                            Value = 4.6f,
                            VideoId = 16
                        },
                        new
                        {
                            Id = 17,
                            UserId = 1,
                            Value = 4.6f,
                            VideoId = 17
                        },
                        new
                        {
                            Id = 18,
                            UserId = 1,
                            Value = 4.5f,
                            VideoId = 18
                        },
                        new
                        {
                            Id = 19,
                            UserId = 1,
                            Value = 4.4f,
                            VideoId = 19
                        },
                        new
                        {
                            Id = 20,
                            UserId = 1,
                            Value = 4.3f,
                            VideoId = 20
                        },
                        new
                        {
                            Id = 21,
                            UserId = 1,
                            Value = 4.2f,
                            VideoId = 21
                        },
                        new
                        {
                            Id = 22,
                            UserId = 1,
                            Value = 4.1f,
                            VideoId = 22
                        },
                        new
                        {
                            Id = 23,
                            UserId = 1,
                            Value = 4.1f,
                            VideoId = 23
                        },
                        new
                        {
                            Id = 24,
                            UserId = 1,
                            Value = 4.1f,
                            VideoId = 24
                        },
                        new
                        {
                            Id = 25,
                            UserId = 1,
                            Value = 4f,
                            VideoId = 25
                        },
                        new
                        {
                            Id = 26,
                            UserId = 1,
                            Value = 3.9f,
                            VideoId = 26
                        });
                });

            modelBuilder.Entity("jap_task1_backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            Hash = new byte[] { 93, 207, 145, 137, 210, 98, 24, 181, 230, 14, 130, 171, 74, 194, 112, 248, 174, 175, 146, 154, 80, 121, 254, 24, 161, 121, 11, 61, 37, 172, 196, 130, 42, 97, 248, 143, 31, 212, 136, 242, 50, 164, 17, 135, 156, 169, 22, 249, 229, 151, 217, 102, 141, 241, 165, 174, 74, 207, 253, 209, 86, 90, 216, 236 },
                            Name = "Admin",
                            Salt = new byte[] { 73, 245, 31, 219, 82, 34, 53, 125, 147, 131, 106, 159, 181, 101, 19, 144, 125, 112, 182, 103, 47, 100, 36, 147, 126, 155, 33, 251, 8, 43, 13, 147, 77, 184, 72, 188, 141, 157, 70, 202, 175, 216, 192, 255, 217, 27, 126, 17, 38, 0, 64, 229, 211, 157, 50, 140, 144, 182, 71, 13, 228, 192, 250, 251, 176, 248, 243, 175, 180, 209, 35, 237, 213, 179, 23, 220, 7, 213, 237, 20, 97, 55, 115, 139, 9, 82, 107, 56, 196, 159, 206, 41, 17, 111, 226, 97, 181, 168, 182, 85, 43, 85, 56, 165, 55, 221, 244, 239, 86, 32, 190, 191, 180, 241, 35, 192, 76, 233, 84, 215, 175, 127, 33, 238, 216, 22, 237, 81 },
                            Surname = "Admin"
                        });
                });

            modelBuilder.Entity("jap_task1_backend.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.",
                            Image_Url = "https://swank.azureedge.net/swank/prod-film/3560cd8a-9491-4ab9-876c-8a8d6b84a6dd/f8e7c904-669a-4c9f-ac29-d19b64b43e33/one-sheet.jpg?width=335&height=508&mode=crop",
                            ReleaseDate = new DateTime(1994, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Shawshank Redemption",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 2,
                            Description = "An organized crime dynasty's aging patriarch transfers control of his clandestine empire to his reluctant son.",
                            Image_Url = "https://www.reelviews.net/resources/img/posters/thumbs/godfather_poster.jpg",
                            ReleaseDate = new DateTime(1972, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 3,
                            Description = "The early life and career of Vito Corleone in 1920s New York City is portrayed, while his son, Michael, expands and tightens his grip on the family crime syndicate.",
                            Image_Url = "https://shotonwhat.com/images/0071562-med.jpg",
                            ReleaseDate = new DateTime(1974, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather: Part II",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 4,
                            Description = "When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.",
                            Image_Url = "https://upload.wikimedia.org/wikipedia/sh/8/83/Dark_knight_rises_poster.jpg",
                            ReleaseDate = new DateTime(2008, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Dark Knight",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 5,
                            Description = "A jury holdout attempts to prevent a miscarriage of justice by forcing his colleagues to reconsider the evidence.",
                            Image_Url = "https://upload.wikimedia.org/wikipedia/commons/b/b5/12_Angry_Men_%281957_film_poster%29.jpg",
                            ReleaseDate = new DateTime(1957, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "12 Angry Men",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 6,
                            Description = "In German-occupied Poland during World War II, industrialist Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazis.",
                            Image_Url = "https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/c617e634647543.56d846b10d56f.jpg",
                            ReleaseDate = new DateTime(1994, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Schindler's List",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.",
                            Image_Url = "https://img.discogs.com/MsgjJVAxVCXb1w86ffIbaNRr2BY=/fit-in/600x600/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-728620-1512923411-4779.jpeg.jpg",
                            ReleaseDate = new DateTime(2003, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Lord of the Rings: The Return of the King",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 8,
                            Description = "The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption.",
                            Image_Url = "https://prod.miramax.digital/media/assets/Pulp-Fiction1.png",
                            ReleaseDate = new DateTime(1994, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pulp Fiction",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 9,
                            Description = "A bounty hunting scam joins two men in an uneasy alliance against a third in a race to find a fortune in gold buried in a remote cemetery.",
                            Image_Url = "https://upload.wikimedia.org/wikipedia/en/4/45/Good_the_bad_and_the_ugly_poster.jpg",
                            ReleaseDate = new DateTime(1996, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Good, the Bad and the Ugly",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 10,
                            Description = "A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.",
                            Image_Url = "https://images.moviesanywhere.com/198e228b071c60f5ad57e5f62fe60029/ff22cad6-2218-414d-b853-3f95d76905c7.jpg?h=375&resize=fit&w=250",
                            ReleaseDate = new DateTime(2001, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Lord of the Rings: The Fellowship of the Ring",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 11,
                            Description = "An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into much more.",
                            Image_Url = "https://m.media-amazon.com/images/I/51v5ZpFyaFL._AC_.jpg",
                            ReleaseDate = new DateTime(1999, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fight Club",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 12,
                            Description = "The presidencies of Kennedy and Johnson, the Vietnam War, the Watergate scandal and other historical events unfold from the perspective of an Alabama man with an IQ of 75, whose only desire is to be reunited with his childhood sweetheart.",
                            Image_Url = "https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/37a5b434647543.56d846b10ca45.jpg",
                            ReleaseDate = new DateTime(1994, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Forrest Gump",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 13,
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.",
                            Image_Url = "https://m.media-amazon.com/images/I/81p+xe8cbnL._SY445_.jpg",
                            ReleaseDate = new DateTime(2010, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception",
                            Type = (short)0
                        },
                        new
                        {
                            Id = 14,
                            Description = "Wildlife documentary series with David Attenborough, beginning with a look at the remote islands which offer sanctuary to some of the planet's rarest creatures, to the beauty of cities, which are home to humans, and animals..",
                            Image_Url = "https://blackwells.co.uk/jacket/l/9781785943041.jpg",
                            ReleaseDate = new DateTime(2016, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Planet Earth II",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 15,
                            Description = "Emmy Award-winning, 11 episodes, five years in the making, the most expensive nature documentary series ever commissioned by the BBC, and the first to be filmed in high definition.",
                            Image_Url = "https://m.media-amazon.com/images/I/91X9p6+58KL._SY445_.jpg",
                            ReleaseDate = new DateTime(2010, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Planet Earth",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 16,
                            Description = "A high school chemistry teacher diagnosed with inoperable lung cancer turns to manufacturing and selling methamphetamine in order to secure his family's future.",
                            Image_Url = "https://www.themoviedb.org/t/p/w600_and_h900_bestv2/ggFHVNu6YYI5L9pCfOacjizRGt.jpg",
                            ReleaseDate = new DateTime(2008, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Breaking Bad",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 17,
                            Description = "The story of Easy Company of the U.S. Army 101st Airborne Division and their mission in World War II Europe, from Operation Overlord to V-J Day.",
                            Image_Url = "https://i.dailymail.co.uk/i/pix/2017/02/13/01/3D24EF6B00000578-4215748-image-a-63_1486948627611.jpg",
                            ReleaseDate = new DateTime(2001, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Band of Brothers",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 18,
                            Description = "In April 1986, an explosion at the Chernobyl nuclear power plant in the Union of Soviet Socialist Republics becomes one of the world's worst man-made catastrophes.",
                            Image_Url = "https://i.redd.it/bv5isr69yr531.png",
                            ReleaseDate = new DateTime(1986, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Chernobyl",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 19,
                            Description = "The Baltimore drug scene, as seen through the eyes of drug dealers and law enforcement.",
                            Image_Url = "https://tvshows.today/wp-content/uploads/the-wire-season-1-poster.jpg",
                            ReleaseDate = new DateTime(2008, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Wire",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 20,
                            Description = "David Attenborough returns to the world's oceans in this sequel to the acclaimed documentary filming rare and unusual creatures of the deep, as well as documenting the problems our oceans face.",
                            Image_Url = "https://cdn.shopify.com/s/files/1/0747/3829/products/mL1006_1024x1024.jpg?v=1571445246",
                            ReleaseDate = new DateTime(2017, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Blue Planet II",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 21,
                            Description = "Documentary series focusing on the breadth of the diversity of habitats around the world, from the remote Arctic wilderness and mysterious deep oceans to the vast landscapes of Africa and diverse jungles of South America.",
                            Image_Url = "https://www.penguin.co.uk/content/dam/prh/books/111/1115210/9780593079768.jpg.transform/PRHDesktopWide_small/image.jpg",
                            ReleaseDate = new DateTime(2019, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Our Planet",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 22,
                            Description = "An exploration of our discovery of the laws of nature and coordinates in space and time.",
                            Image_Url = "https://pisces.bbystatic.com/image2/BestBuy_US/images/products/5945/5945188_sa.jpg;maxHeight=640;maxWidth=550",
                            ReleaseDate = new DateTime(2014, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cosmos: A Spacetime Odyssey",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 23,
                            Description = "In a war-torn world of elemental magic, a young boy reawakens to undertake a dangerous mystic quest to fulfill his destiny as the Avatar, and bring peace to the world.",
                            Image_Url = "https://images-na.ssl-images-amazon.com/images/I/914eUC4XPML.jpg",
                            ReleaseDate = new DateTime(2005, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avatar: The Last Airbender",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 24,
                            Description = "Astronomer Carl Sagan leads us on an engaging guided tour of the various elements and cosmological theories of the universe.",
                            Image_Url = "https://www.themoviedb.org/t/p/original/4WJ9kNejI8apl3f8hMNwo8V3hGT.jpg",
                            ReleaseDate = new DateTime(1980, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cosmos",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 25,
                            Description = "Nine noble families fight for control over the lands of Westeros, while an ancient enemy returns after being dormant for millennia.",
                            Image_Url = "https://m.media-amazon.com/images/M/MV5BYTRiNDQwYzAtMzVlZS00NTI5LWJjYjUtMzkwNTUzMWMxZTllXkEyXkFqcGdeQXVyNDIzMzcwNjc@._V1_FMjpg_UX1000_.jpg",
                            ReleaseDate = new DateTime(2011, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Game of Thrones",
                            Type = (short)1
                        },
                        new
                        {
                            Id = 26,
                            Description = "New Jersey mob boss Tony Soprano deals with personal and professional issues in his home and business life that affect his mental state, leading him to seek professional psychiatric counseling.",
                            Image_Url = "https://m.media-amazon.com/images/M/MV5BZGJjYzhjYTYtMDBjYy00OWU1LTg5OTYtNmYwOTZmZjE3ZDdhXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_FMjpg_UX1000_.jpg",
                            ReleaseDate = new DateTime(1999, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Sopranos",
                            Type = (short)1
                        });
                });

            modelBuilder.Entity("ActorVideo", b =>
                {
                    b.HasOne("jap_task1_backend.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jap_task1_backend.Models.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryVideo", b =>
                {
                    b.HasOne("jap_task1_backend.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jap_task1_backend.Models.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jap_task1_backend.Models.Rating", b =>
                {
                    b.HasOne("jap_task1_backend.Models.User", null)
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jap_task1_backend.Models.Video", null)
                        .WithMany("Ratings")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jap_task1_backend.Models.User", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("jap_task1_backend.Models.Video", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
